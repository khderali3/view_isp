# Generated by Django 4.2.1 on 2025-02-12 18:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import projectFlowApp.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('projectFlowApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectFlowNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_flow_note', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFlowNoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.FileField(upload_to='project_flow/ProjectFlowNoteAttachment/', validators=[projectFlowApp.models.validate_file_or_image])),
                ('file_name', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('created_data', models.DateTimeField(auto_now_add=True)),
                ('project_flow_note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFlowNoteAttachment_project_flow_note_related_ProjectFlowNote', to='projectFlowApp.projectflownote')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFlowStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_name', models.CharField(db_index=True, max_length=255)),
                ('step_description', models.TextField()),
                ('project_flow_step_status', models.CharField(choices=[('pending', 'pending'), ('in_progress', 'in_progress'), ('wait_customer_action', 'wait_customer_action'), ('completed', 'completed'), ('canceled', 'canceled')], default='pending', max_length=30)),
                ('show_to_client', models.BooleanField(default=True)),
                ('allowed_process_by', models.CharField(choices=[('any_staff', 'any_staff'), ('specific_project_group', 'specific_project_group')], default='any_staff', max_length=30)),
                ('sorted_weight', models.PositiveIntegerField(db_index=True, default=1000)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('allowed_process_groups', models.ManyToManyField(blank=True, related_name='project_flow_steps_groups', to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFlowStepNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('project_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectFlowStepNote_project_step_related_ProjectFlowStep', to='projectFlowApp.projectflowstep')),
                ('step_note_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectFlowStepNote_step_note_user_related_ProjectFlowStep', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFlowStepNoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.FileField(upload_to='project_flow/ProjectFlowStepNoteAttachment/', validators=[projectFlowApp.models.validate_file_or_image])),
                ('file_name', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('created_data', models.DateTimeField(auto_now_add=True)),
                ('project_flow_step_note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFlowStepNoteAttachment_project_flow_step_note_related_ProjectFlowStepNote', to='projectFlowApp.projectflowstepnote')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTypeAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.FileField(upload_to='project_flow/ProjectFlowType/attachment/', validators=[projectFlowApp.models.validate_file_or_image])),
                ('file_name', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('created_data', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTypeExtraImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_flow_extra_image', models.FileField(upload_to='project_flow/ProjectFlowType/extra_images/', validators=[projectFlowApp.models.validate_image])),
                ('project_flow_extra_image_name', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('created_data', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StepsTemplateName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(db_index=True, max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StepTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_name', models.CharField(db_index=True, max_length=255)),
                ('step_description', models.TextField()),
                ('show_to_client', models.BooleanField(default=True)),
                ('allowed_process_by', models.CharField(choices=[('any_staff', 'any_staff'), ('specific_project_group', 'specific_project_group')], default='any_staff', max_length=30)),
                ('sorted_weight', models.PositiveIntegerField(db_index=True, default=1000)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('allowed_process_groups', models.ManyToManyField(blank=True, related_name='steps_templates_allowed_groups', to='auth.group')),
                ('steps_template_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StepsTemplate_steps_template_name_related_StepsTemplateName', to='projectFlowApp.stepstemplatename')),
            ],
        ),
        migrations.CreateModel(
            name='StepTemplateNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('step_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StepsTemplateNote_step_template_related_StepTemplate', to='projectFlowApp.steptemplate')),
            ],
        ),
        migrations.CreateModel(
            name='StepTemplateNoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.FileField(upload_to='project_flow/StepTemplateNoteAttachment/', validators=[projectFlowApp.models.validate_file_or_image])),
                ('file_name', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('created_data', models.DateTimeField(auto_now_add=True)),
                ('step_template_note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StepTemplateNoteAttachment_step_template_note', to='projectFlowApp.steptemplatenote')),
            ],
        ),
        migrations.RemoveField(
            model_name='projectflowtypeextraimages',
            name='project_name',
        ),
        migrations.AlterField(
            model_name='projectflow',
            name='project_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectFlow_project_name', to='projectFlowApp.projectflowtype'),
        ),
        migrations.RenameModel(
            old_name='ProjectFlowType',
            new_name='ProjectType',
        ),
        migrations.DeleteModel(
            name='ProjectFlowTypeAttachment',
        ),
        migrations.DeleteModel(
            name='ProjectFlowTypeExtraImages',
        ),
        migrations.AddField(
            model_name='projecttypeextraimages',
            name='project_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectFlowTypeExtraImages_project_name', to='projectFlowApp.projecttype'),
        ),
        migrations.AddField(
            model_name='projecttypeattachment',
            name='project_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProjectTypeAttachment_project_name', to='projectFlowApp.projecttype'),
        ),
        migrations.AddField(
            model_name='projectflowstep',
            name='project_flow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectFlowStep_ProjectFlow_related_ProjectFlow', to='projectFlowApp.projectflow'),
        ),
        migrations.AddField(
            model_name='projectflowstep',
            name='step_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectFlowStep_step_user_related_User', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectflownote',
            name='project_flow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectFlowNote_project_flow_related_ProjectFlow', to='projectFlowApp.projectflow'),
        ),
        migrations.AddField(
            model_name='projectflownote',
            name='project_flow_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectFlowNote_project_flow_user_related_User', to=settings.AUTH_USER_MODEL),
        ),
    ]
